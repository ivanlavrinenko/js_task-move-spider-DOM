{"mappings":"ACEA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,GAAI,AAAsC,YAAtC,iBAAiB,EAAE,MAAM,EAAE,MAAM,EAIrC,IAAM,EAAS,SAAS,aAAa,CAAC,WAChC,EAAO,SAAS,aAAa,CAAC,SAE9B,EAAU,EAAE,OAAO,CACnB,EAAU,EAAE,OAAO,CAEnB,EAAW,EAAK,qBAAqB,GACrC,EAAkB,SAAS,iBAAiB,GAAM,WAAW,EAE7D,EAAc,EAAO,WAAW,CAChC,EAAe,EAAO,YAAY,CAEpC,EAAU,EAAU,EAAS,IAAI,CAAG,EAAc,EAAI,EACtD,EAAS,EAAU,EAAS,GAAG,CAAG,EAAe,EAAI,EAEzD,EAAU,KAAK,GAAG,CAAC,EAAG,KAAK,GAAG,CAAC,EAAS,EAAK,WAAW,CAAG,IAE3D,EAAS,KAAK,GAAG,CAAC,EAAG,KAAK,GAAG,CAAC,EAAQ,EAAK,WAAW,CAAG,IAEzD,EAAO,KAAK,CAAC,IAAI,CAAG,GAAW,MAAA,CAAR,EAAQ,MAC/B,EAAO,KAAK,CAAC,GAAG,CAAG,GAAU,MAAA,CAAP,EAAO,MAC/B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"click\", function(e) {\n    if (getComputedStyle(e.target).cursor !== \"pointer\") return;\n    var spider = document.querySelector(\".spider\");\n    var wall = document.querySelector(\".wall\");\n    var clientX = e.clientX;\n    var clientY = e.clientY;\n    var wallRect = wall.getBoundingClientRect();\n    var wallBorderWidth = parseInt(getComputedStyle(wall).borderWidth);\n    var spiderWidth = spider.offsetWidth;\n    var spiderHeight = spider.offsetHeight;\n    var newLeft = clientX - wallRect.left - spiderWidth / 2 - wallBorderWidth;\n    var newTop = clientY - wallRect.top - spiderHeight / 2 - wallBorderWidth;\n    newLeft = Math.max(0, Math.min(newLeft, wall.clientWidth - spiderWidth));\n    newTop = Math.max(0, Math.min(newTop, wall.clientWidth - spiderHeight));\n    spider.style.left = \"\".concat(newLeft, \"px\");\n    spider.style.top = \"\".concat(newTop, \"px\");\n});\n\n//# sourceMappingURL=index.1b37010c.js.map\n","'use strict';\n\ndocument.addEventListener('click', (e) => {\n  if (getComputedStyle(e.target).cursor !== 'pointer') {\n    return;\n  }\n\n  const spider = document.querySelector('.spider');\n  const wall = document.querySelector('.wall');\n\n  const clientX = e.clientX;\n  const clientY = e.clientY;\n\n  const wallRect = wall.getBoundingClientRect();\n  const wallBorderWidth = parseInt(getComputedStyle(wall).borderWidth);\n\n  const spiderWidth = spider.offsetWidth;\n  const spiderHeight = spider.offsetHeight;\n\n  let newLeft = clientX - wallRect.left - spiderWidth / 2 - wallBorderWidth;\n  let newTop = clientY - wallRect.top - spiderHeight / 2 - wallBorderWidth;\n\n  newLeft = Math.max(0, Math.min(newLeft, wall.clientWidth - spiderWidth));\n\n  newTop = Math.max(0, Math.min(newTop, wall.clientWidth - spiderHeight));\n\n  spider.style.left = `${newLeft}px`;\n  spider.style.top = `${newTop}px`;\n});\n"],"names":["document","addEventListener","e","getComputedStyle","target","cursor","spider","querySelector","wall","clientX","clientY","wallRect","getBoundingClientRect","wallBorderWidth","parseInt","borderWidth","spiderWidth","offsetWidth","spiderHeight","offsetHeight","newLeft","left","newTop","top","Math","max","min","clientWidth","style","concat"],"version":3,"file":"index.1b37010c.js.map"}